import { SafeAreaView, StyleSheet, View } from "react-native";
import React, { useContext } from "react";
import { Text, Button } from "native-base";
import { QuestionsContext } from "../components/contexts/questionsContext";
import { colorPalette } from "../../assets/theme/color-palette";

const QuizScreen = () => {
  const { questions } = useContext(QuestionsContext);

  console.log(questions);

  const shuffleQuestions = (array) => {
    let currentIndex = array.length,
      randomIndex;

    // While there remain elements to shuffle.
    while (currentIndex != 0) {
      // Pick a remaining element.
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex--;

      // And swap it with the current element.
      [array[currentIndex], array[randomIndex]] = [
        array[randomIndex],
        array[currentIndex],
      ];
    }

    return array;
  };

  const currentQuestion = questions[0];
  let options = [];
  options.push(currentQuestion.correctAnswer);
  console.log(options);
  currentQuestion.wrongAnswers.forEach((answer) => options.push(answer));
  options = shuffleQuestions(options);
  console.log(options);

  return (
    <SafeAreaView>
      <View style={styles.topContainer1}>
        <Text>Your custom quiz</Text>
        <Text>timer</Text>
      </View>
      <View style={styles.topContainer2}>
        <Text>Your progress</Text>
        <Text>(0 / 10) questions answered</Text>
      </View>

      <View style={styles.container}>
        <Text style={styles.questionText}>{currentQuestion.question}</Text>
        {options.forEach((q) => {
          <Text>{q}</Text>;
        })}
        <View style={styles.questionContainer}>
          {options.map((item, i) => {
            <View>
              <Text style={styles.answerText}>{item}</Text>
            </View>;
          })}
        </View>
      </View>
    </SafeAreaView>
  );
};

export default QuizScreen;

const styles = StyleSheet.create({
  topContainer1: {
    flexDirection: "row",
    justifyContent: "space-between",
    padding: 10,
    alignItems: "center",
  },
  topContainer2: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginHorizontal: 10,
    alignItems: "center",
  },
  container: {
    backgroundColor: colorPalette.componentsBackgroundColor,
    marginTop: 10,
    padding: 10,
    borderRadius: 6,
  },
  questionContainer: {
    marginTop: 12,
  },
  questionText: {
    color: colorPalette.componentTextColor,
    textAlign: "center",
    fontSize: 18,
    fontWeight: "bold",
  },
  answerText: {
    color: colorPalette.componentTextColor,
    textAlign: "center",
  },
  button: {
    margin: 10,
    width: "40%",
    height: 80,
  },
});
